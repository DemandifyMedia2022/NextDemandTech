"use client";

import { useEffect, useRef } from "react";
import { gsap } from "gsap";

export default function AnimatedIconLoop() {
  const svgRef = useRef<SVGSVGElement>(null);

  useEffect(() => {
    if (!svgRef.current) return;

    const ctx = gsap.context(() => {
      // 1. Initial stroke-draw animation for paths
      gsap.utils.toArray<SVGPathElement>("path").forEach((path, i) => {
        const length = path.getTotalLength();
        gsap.set(path, {
          strokeDasharray: length,
          strokeDashoffset: length,
          stroke: "#1A2FFB",
          fill: "none",
        });
        gsap.to(path, {
          strokeDashoffset: 0,
          duration: 1.5,
          delay: i * 0.4,
          ease: "power2.out",
          onComplete: () =>
            gsap.to(path, { fill: "#1A2FFB", duration: 0.6 }),
        });
      });

      // 2. Bounce circle in initially
      gsap.fromTo(
        "circle",
        { scale: 0, transformOrigin: "center center" },
        {
          scale: 1,
          duration: 1,
          delay: 2,
          ease: "elastic.out(1, 0.6)",
        }
      );

      // 3. LOOPING ANIMATIONS

      // Floating effect for paths
      gsap.to("path", {
        y: 10,
        duration: 2,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        stagger: 0.3,
        delay: 3, // starts after draw animation
      });

      // Pulse the circle
      gsap.to("circle", {
        scale: 1.1,
        transformOrigin: "center center",
        duration: 1,
        repeat: -1,
        yoyo: true,
        ease: "power1.inOut",
        delay: 3,
      });

      // Optional: rotate entire SVG slowly
      gsap.to(svgRef.current, {
        rotate: 360,
        duration: 40,
        repeat: -1,
        ease: "linear",
        transformOrigin: "center center",
      });
    }, svgRef);

    return () => ctx.revert();
  }, []);

  return (
    <svg
      ref={svgRef}
      width="625"
      height="998"
      viewBox="0 0 625 998"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M540.369 250.25C567.312 250.25 584.152 279.417 570.681 302.75L371.002 648.603V724.5L263.002 781V650.334L62.3232 302.75C48.8518 279.417 65.6918 250.25 92.6348 250.25H540.369Z" fill="#1A2FFB"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M317.187 219.011C317.029 220.392 316.328 221.653 315.239 222.516C314.151 223.38 312.764 223.777 311.384 223.618L259.222 217.619C258.536 217.541 257.872 217.328 257.269 216.993C256.665 216.658 256.134 216.208 255.705 215.667C255.275 215.126 254.957 214.506 254.768 213.842C254.579 213.178 254.522 212.484 254.602 211.798L255.201 206.587C256.78 192.855 278.463 188.124 278.463 188.124C278.463 188.124 279.902 186.128 279.062 182.909C275.048 179.17 275.092 174.05 276.246 161.446C278.596 148.965 287.783 146.919 293.692 147.599C299.601 148.278 308.085 152.351 307.54 165.045C305.802 177.581 304.683 182.579 299.925 185.308C298.377 188.248 299.325 190.523 299.325 190.523C299.325 190.523 319.368 200.052 317.788 213.785L317.187 219.011Z" fill="#1A2FFB"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M211.495 132.652C211.881 133.987 211.72 135.421 211.048 136.637C210.376 137.854 209.249 138.753 207.914 139.139L157.466 153.693C156.803 153.885 156.108 153.944 155.422 153.867C154.736 153.791 154.072 153.579 153.468 153.246C152.863 152.912 152.331 152.462 151.9 151.922C151.47 151.383 151.15 150.763 150.96 150.1L149.506 145.061C145.674 131.779 163.862 119.063 163.862 119.063C163.862 119.063 164.422 116.666 162.407 114.018C157.262 112.115 155.331 107.372 151.542 95.2964C148.903 82.8728 156.593 77.4466 162.309 75.7978C168.024 74.149 177.422 74.6398 181.807 86.5649C185.032 98.8031 185.924 103.846 182.584 108.197C182.287 111.507 184.039 113.242 184.039 113.242C184.039 113.242 206.206 114.316 210.037 127.598L211.495 132.652Z" fill="#1A2FFB"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M437.834 147.065C439.195 146.783 440.612 147.052 441.774 147.815C442.936 148.577 443.747 149.77 444.029 151.13L454.702 202.539C454.843 203.215 454.849 203.912 454.721 204.59C454.592 205.269 454.331 205.915 453.952 206.492C453.573 207.069 453.085 207.566 452.514 207.954C451.943 208.342 451.301 208.613 450.625 208.753L445.489 209.819C431.955 212.629 420.659 193.526 420.659 193.526C420.659 193.526 418.312 192.786 415.519 194.593C413.229 199.578 408.353 201.143 396.024 204.002C383.436 205.688 378.611 197.607 377.402 191.783C376.193 185.959 377.397 176.625 389.622 173.16C402.07 170.876 407.166 170.37 411.25 174.032C414.527 174.579 416.391 172.965 416.391 172.965C416.391 172.965 419.149 150.944 432.684 148.134L437.834 147.065Z" fill="#1A2FFB"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M375.811 65.7244C376.715 66.7792 377.164 68.1502 377.058 69.5357C376.952 70.9212 376.299 72.2079 375.245 73.1125L335.39 107.295C334.867 107.745 334.26 108.087 333.604 108.302C332.948 108.517 332.256 108.601 331.567 108.548C330.879 108.495 330.208 108.307 329.592 107.995C328.977 107.682 328.429 107.252 327.98 106.727L324.566 102.746C315.566 92.2536 326.834 73.1345 326.834 73.1345C326.834 73.1345 326.349 70.7219 323.416 69.1494C317.946 69.5532 314.22 66.0397 305.76 56.6272C298.202 46.42 302.946 38.2909 307.461 34.4184C311.976 30.5459 320.73 27.0912 329.67 36.1198C337.684 45.9151 340.589 50.1327 339.356 55.4778C340.46 58.6117 342.774 59.4629 342.774 59.4629C342.774 59.4629 363.387 51.2388 372.386 61.7314L375.811 65.7244Z" fill="#1A2FFB"/>
      <circle cx="316.5" cy="878.5" r="33.5" fill="#1A2FFB"/>
    </svg>
  );
}
